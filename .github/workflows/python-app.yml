# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9.18", "3.10.13", "3.12.1" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-mock requests coverage pylint pycodestyle check-manifest readme_renderer
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: check-manifest
        run: |
          check-manifest
      - name: confirm required package meta-data in setup.py
        run: |
          python setup.py check -m -s
      - name: Analysing the code with pylint
        run: |
          pylint --max-line-length=127 $(git ls-files '*.py')
      - name: Analysing the code with pycodestyle (formerly called pep8)
        run: |
          pycodestyle --max-line-length=127 --exclude=.svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.eggs
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
